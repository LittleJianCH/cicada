// Example of a big category.

class GroupHom {
  dom: Group
  cod: Group
  hom(dom.Elem): cod.Elem

  homRespectMul(x: dom.Elem, y: dom.Elem): TheEqual(
    cod.Elem,
    hom(dom.mul(x, y)),
    cod.mul(hom(x), hom(y)))
}

let groupCategory = new Category(Group, GroupHom) {
  id(dom: Group): GroupHom(dom, dom) =
    new GroupHom {
      hom(x: dom.Elem): dom.Elem = x
      homRespectMul(x: dom.Elem, y: dom.Elem) = Same(dom.mul(x, y))
    }

  // given G: Group, H: Group, K: Group
  compose(f: GroupHom(G, H), g: GroupHom(H, K)) =
    new GroupHom {
      dom = G
      cod = K
      hom(x: G.Elem) = g.hom(f.hom(x))
      homRespectMul(x: G.Elem, y: G.Elem) = Same(g.hom(H.mul(f.hom(x), f.hom(y))))
    }

  // given G: Group, H: Group
  idLeft(f: GroupHom(G, H)) = Same(f)

  // given G: Group, H: Group
  idRight(f: GroupHom(G, H)) = Same(f)

  // given G: Group, H: Group, K: Group, L: Group
  composeAssociative(f: GroupHom(G, H), g: GroupHom(H, K), h: GroupHom(K, L)) = Refl
}
